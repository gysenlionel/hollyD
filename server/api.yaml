swagger: "2.0"
info:
  title: HolyD
  description: This is API holyD documentation made by Lionel.
  version: 1.0
  servers:
    -url: "http://localhost:8000/"
    description: This is my local server

schemes: [http, https]

#Auth
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

security:
  - Bearer: []

paths:
  # Post json/body
  /api/hotels:
    post:
      tags:
        - Hotel Data
      summary: Posting Data
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: hotel
          schema:
            $ref: "#/components/schemas/Hotel"
      responses:
        200:
          description: OK

  # return Hotels
  /api/hotels/:
    get:
      tags:
        - Hotel Data
      parameters:
        - in: query
          name: featured
          type: boolean
        - in: query
          name: limit
          type: integer
          default: 10
          description: number of hotels by request
        - in: query
          name: min
          type: integer
          description: Price min
        - in: query
          name: max
          type: integer
          description: Price max
      summary: Returns a Array of Hotels
      description: Array Return of hotels
      responses:
        200:
          description: Success
          schema:
            $ref: "#/components/schemas/Hotels"
        400:
          description: Hotels Error
        500:
          description: Internal Server Error

  # return Hotel
  /api/hotels/find/{id}:
    get:
      tags:
        - Hotel Data
      parameters:
        - name: id
          in: path
          required: true
          description: Id of hotel
          schema:
            type: integer
            example: 62ac496c07509a710f01c17a
      summary: Returns a object of Hotel
      description: Returns a object of Hotel through its id
      responses:
        200:
          description: Success
          schema:
            $ref: "#/components/schemas/Hotel"
        400:
          description: Hotel Error
        500:
          description: Internal Server Error

  # return count by city
  /api/hotels/countByCity:
    get:
      tags:
        - Hotel Data
      parameters:
        - in: query
          name: cities
          type: string
          example: bruxelles,roma
          required: true
          description: Type your city
      summary: Returns an array of number
      description: Returns an array of number of cities
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              type: integer
        400:
          description: City error
        500:
          description: Internal Server Error

  # return count by city
  /api/hotels/countByType:
    get:
      tags:
        - Hotel Data
      summary: Returns an array of object
      description: Returns an array of object. the object has a type and the counting of this type.
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              type: object
              properties:
                type:
                  type: string
                count:
                  type: integer
        400:
          description: Hotels error
        500:
          description: Internal Server Error

  # return Hotel
  /api/hotels/rooms/{id}:
    get:
      tags:
        - Hotel Data
      parameters:
        - name: id
          in: path
          required: true
          description: Id of hotel
          schema:
            type: integer
            example: 62ac496c07509a710f01c17a
      summary: Returns an array of object
      description: Returns an array of room object.
      responses:
        200:
          description: Success
          schema:
            $ref: "#/components/schemas/Rooms"
        400:
          description: Hotel Error
        500:
          description: Internal Server Error

# Component
components:
  schemas:
    Hotels:
      type: array
      items:
        type: object
        properties:
          _id:
            type: integer
          name:
            type: string
          type:
            type: string
          city:
            type: string
          address:
            type: string
          distance:
            type: string
          photos:
            type: array
          title:
            type: string
          desc:
            type: string
          rating:
            type: integer
            minimum: 0
            maximum: 5
          rooms:
            type: array
          cheapestPrice:
            type: integer
          featured:
            type: boolean
            default: false
          createdAt:
            type: string
            format: date-time
            readOnly: true
          updatedAt:
            type: string
            format: date-time
            readOnly: true
    Hotel:
      type: object
      properties:
        _id:
          type: integer
          readOnly: true
        name:
          type: string
          required: true
        type:
          type: string
          required: true
        city:
          type: string
          required: true
        address:
          type: string
          required: true
        distance:
          type: string
          required: true
        photos:
          type: array
          readOnly: true
        title:
          type: string
          required: true
        desc:
          type: string
          required: true
        rating:
          type: integer
          minimum: 0
          maximum: 5
        rooms:
          type: array
        cheapestPrice:
          type: integer
          required: true
        featured:
          type: boolean
          default: false
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    Rooms:
      type: array
      items:
        type: object
        properties:
          _id:
            type: integer
          title:
            type: string
          price:
            type: integer
          maxPeople:
            type: integer
          desc:
            type: string
          roomNumbers:
            type: array
            items:
              type: object
              properties:
                _id:
                  type: integer
                number:
                  type: integer
                unavailableDates:
                  type: array
                  items:
                    type: string
                    format: date-time
          createdAt:
            type: string
            format: date-time
            readOnly: true
          updatedAt:
            type: string
            format: date-time
            readOnly: true
